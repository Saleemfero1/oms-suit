plugins {
    id 'java'
    id 'io.spring.dependency-management' version "${springDependencyManagementVersion}"
    id 'org.springframework.boot' version "${springBootVersion}" apply false
}

group = 'com.oms'
version = projectVersion

allprojects {
    repositories {
        mavenCentral()
    }
}

subprojects {
    apply plugin: 'java'
    apply plugin: 'io.spring.dependency-management'

    java {
        toolchain {
            languageVersion = JavaLanguageVersion.of(Integer.parseInt(javaVersion))
        }
    }

    dependencyManagement {
        imports {
            mavenBom "org.springframework.boot:spring-boot-dependencies:${springBootVersion}"
        }
    }

    configurations {
        compileOnly {
            extendsFrom annotationProcessor
        }
    }

    dependencies {
        implementation 'org.springframework.boot:spring-boot-starter-web'
        implementation 'org.springframework.boot:spring-boot-starter-data-jdbc'
        implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
        implementation 'jakarta.persistence:jakarta.persistence-api:3.1.0'
        runtimeOnly 'org.postgresql:postgresql'

        // Lombok for all modules
        compileOnly 'org.projectlombok:lombok:1.18.34'
        annotationProcessor 'org.projectlombok:lombok:1.18.34'

        // Test for all modules
        testImplementation 'org.springframework.boot:spring-boot-starter-test'
        testRuntimeOnly 'org.junit.platform:junit-platform-launcher'

        // Mapper for all modules
        implementation 'org.mapstruct:mapstruct:1.5.5.Final'
        annotationProcessor 'org.mapstruct:mapstruct-processor:1.5.5.Final'
    }

    tasks.named('test') {
        useJUnitPlatform()
    }
}
